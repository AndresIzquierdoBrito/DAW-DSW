// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using AUT03_04_AndresIzquierdo_JuegosAuthAPI.Data;

#nullable disable

namespace AUT03_04_AndresIzquierdo_JuegosAuthAPI.Migrations
{
    [DbContext(typeof(UT03_Ej02_AndresIzquierdoContext))]
    partial class UT03_Ej02_AndresIzquierdoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AUT03_04_AndresIzquierdo_JuegosAuthAPI.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"), 1L, 1);

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("GameId");

                    b.HasIndex("GenreId");

                    b.ToTable("Game");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            GenreId = 1,
                            Title = "Last of us"
                        },
                        new
                        {
                            GameId = 2,
                            GenreId = 1,
                            Title = "Tomb Raider"
                        },
                        new
                        {
                            GameId = 3,
                            GenreId = 2,
                            Title = "Mario Bros"
                        },
                        new
                        {
                            GameId = 4,
                            GenreId = 2,
                            Title = "Rayman"
                        },
                        new
                        {
                            GameId = 5,
                            GenreId = 3,
                            Title = "Starcraft"
                        });
                });

            modelBuilder.Entity("AUT03_04_AndresIzquierdo_JuegosAuthAPI.Models.Genre", b =>
                {
                    b.Property<int>("IdGenre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGenre"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("IdGenre");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            IdGenre = 1,
                            Name = "Adventure"
                        },
                        new
                        {
                            IdGenre = 2,
                            Name = "Plataformer"
                        },
                        new
                        {
                            IdGenre = 3,
                            Name = "Strategy"
                        });
                });

            modelBuilder.Entity("AUT03_04_AndresIzquierdo_JuegosAuthAPI.Models.Game", b =>
                {
                    b.HasOne("AUT03_04_AndresIzquierdo_JuegosAuthAPI.Models.Genre", "Genre")
                        .WithMany("GenreGames")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("AUT03_04_AndresIzquierdo_JuegosAuthAPI.Models.Genre", b =>
                {
                    b.Navigation("GenreGames");
                });
#pragma warning restore 612, 618
        }
    }
}
